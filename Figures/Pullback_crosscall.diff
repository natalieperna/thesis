--- compile-float/MAlonzo/Code/Data/Fin/VecCat/PullbackB.hs
+++ compile-crosscall/MAlonzo/Code/Data/Fin/VecCat/PullbackB.hs
@@ -88,9 +88,10 @@
 name46 = "Data.Fin.VecCat.PullbackB.FinPB₀.mkPair"
 d46 v0 v1 v2 v3 v4 v5 v6 v7 = du46 v1 v2 v3 v4 v5 v6
 du46 v0 v1 v2 v3 v4 v5
-  = coe
-      MAlonzo.Code.Data.Nat.DivMod.du76 (coe du78 v0 v1 v2 v3 v4 v5)
-      (coe du28 v0 v1 v2 v3)
+  = let v6 = coe du28 v0 v1 v2 v3 in
+    let v7 = coe du78 v0 v1 v2 v3 v4 v5 in dv46 v0 v1 v2 v3 v4 v5 v6 v7
+dv46 v0 v1 v2 v3 v4 v5 v6 v7
+  = coe MAlonzo.Code.Data.Nat.DivMod.du76 v7 v6
 name58 = "Data.Fin.VecCat.PullbackB.FinPB₀._.lk"
 d58 v0 v1 v2 v3 v4 v5 v6 v7 = du58 v1 v2 v3 v4 v5
 du58 v0 v1 v2 v3 v4
@@ -128,13 +129,21 @@
 name78 = "Data.Fin.VecCat.PullbackB.FinPB₀._.r₀"
 d78 v0 v1 v2 v3 v4 v5 v6 v7 = du78 v1 v2 v3 v4 v5 v6
 du78 v0 v1 v2 v3 v4 v5
-  = coe
-      addInt (coe du60 v0 v1 v2 v3 v4)
+  = let v6 = coe du58 v0 v1 v2 v3 v4 in dv78 v0 v1 v2 v3 v4 v5 v6
+dv78 v0 v1 v2 v3 v4 v5 v6
+  = case coe v6 of
+      MAlonzo.Code.Data.Product.C30 v7 v8
+        -> case coe v8 of
+             MAlonzo.Code.Data.Product.C30 v9 v10
+               -> coe
+                    addInt (coe dv60 v0 v1 v2 v3 v4 v6 v7 v8)
       (coe
          MAlonzo.Code.Data.Fin.du18
          (coe
             MAlonzo.Code.Data.Fin.VecCat.PullbackVecUtils.du302
-            (coe du70 v0 v1 v2 v3 v4) v5))
+                          (coe dv70 v0 v1 v2 v3 v4 v6 v7 v8 v9 v10) v5))
+             _ -> coe MAlonzo.RTE.mazUnreachableError
+      _ -> coe MAlonzo.RTE.mazUnreachableError
